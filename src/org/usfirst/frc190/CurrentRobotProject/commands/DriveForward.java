//We need to modify this to work in auto - discuss
package org.usfirst.frc190.CurrentRobotProject.commands;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc190.CurrentRobotProject.Robot;
import org.usfirst.frc190.CurrentRobotProject.AutoDirection;
//This command will drive a given distance at a given speed.
//Requires encoders.
//TODO: Fix with autotonomous implementation.
public class DriveForward extends Command {
    private double driveForwardSpeed = .5;
    private double distance;
    
    public DriveForward() {
        distance = 10;
        requires(Robot.drivetrain);
    }
    
    public DriveForward(double driveDistance, double speed) {
        distance = driveDistance;
        driveForwardSpeed = speed;
	
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.drivetrain);
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }
    protected void initialize() {
        Robot.drivetrain.resetEncoder();
        if(Robot.getAutonomousDirection() != AutoDirection.NO_MOVEMENT){
            //Is nessecary.
            if (distance < 0) {
                //Go backward.
                Robot.drivetrain.tankDriveWithValues(-driveForwardSpeed, -driveForwardSpeed);
            }else{
                Robot.drivetrain.tankDrive(-driveForwardSpeed, -driveForwardSpeed);
            }}else {
                //Go forward.
                Robot.drivetrain.tankDriveWithValues(driveForwardSpeed, driveForwardSpeed);
            }
        }
    protected void execute() {
    }
    protected boolean isFinished() {
        if (Robot.getAutonomousDirection() != AutoDirection.NO_MOVEMENT) {
            if (distance < 0) {
                //Going backward.
                return (Robot.drivetrain.getEncoderDistance() <= distance);
            } else {
                return (Robot.drivetrain.getEncoderDistance() >= distance);
            }
        } else {
            return true;
        }
    }
    protected void end() {
        Robot.drivetrain.stopDriveMotors();
    }
    protected void interrupted() {
        end();
    }
}
