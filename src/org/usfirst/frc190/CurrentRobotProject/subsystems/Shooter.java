//Shooter Subsystem
package org.usfirst.frc190.CurrentRobotProject.subsystems;
import org.usfirst.frc190.CurrentRobotProject.RobotMap;
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.command.Subsystem;
public class Shooter extends Subsystem {
    //latchPiston needs to be changed to a double solenoid
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    DigitalInput hotGoalSensor = RobotMap.shooterHotGoalSensor;
    DoubleSolenoid piston1 = RobotMap.shooterPiston1;
    DoubleSolenoid piston2 = RobotMap.shooterPiston2;
    Solenoid latchPiston = RobotMap.shooterLatchPiston;
    DigitalInput piston1ReedSwitchFront = RobotMap.shooterPiston1ReedSwitchFront;
    DigitalInput piston1ReedSwitchBack = RobotMap.shooterPiston1ReedSwitchBack;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
    }
    public void extendBoth() {
        piston1.set(DoubleSolenoid.Value.kForward);
        piston2.set(DoubleSolenoid.Value.kForward);
    }
    public void retractBoth() {
        piston1.set(DoubleSolenoid.Value.kReverse);
        piston2.set(DoubleSolenoid.Value.kReverse);
    }
    public void extend1() {
        piston1.set(DoubleSolenoid.Value.kForward);
    }
public void retract1() {
        piston1.set(DoubleSolenoid.Value.kReverse);
    }
    
    public void extend2() {
        piston2.set(DoubleSolenoid.Value.kReverse);
    }
    public void retract2() {
        piston2.set(DoubleSolenoid.Value.kForward);
    }
    public void off1() {
        //Turns off the piston1 double solenoid. 
        //This won't actuate anything because double solenoids preserve their state when turned off.
        //This should be called in order to reduce the amount of time that the coils are powered.
        piston1.set(DoubleSolenoid.Value.kOff);
    }
    
    public void off2() {
        piston2.set(DoubleSolenoid.Value.kOff);
    }
    
    public void extendLatchPiston() {
        latchPiston.set(true); //Unlatch
    }
    public void retractLatchPiston() {
        latchPiston.set(false); //Latch
    }
    
    public void toggleLatchPosition() {
        latchPiston.set(!latchPiston.get()); 
    }
    public boolean piston1IsExtended() {
        return !piston1ReedSwitchFront.get();
    }
    public boolean piston1IsRetracted() {
        return !piston1ReedSwitchBack.get();
    }
    public void turnOffAllDoubleSolenoids() {
        //Turns off all double solenoids.
        //Double solenoids hold their position when they are turned off.
        //We should turn them off whenever possible to extend the life of the coils.
        piston1.set(DoubleSolenoid.Value.kOff);
        piston2.set(DoubleSolenoid.Value.kOff);
        //TODO: May need to add more methods here if we use more double solenoids.
    }
    public boolean goalIsHot(){
        //Reads the banner switch. 
        //Will be true when goal is hot.
        return hotGoalSensor.get();
    }
}
